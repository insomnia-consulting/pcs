import java.awt.*;import javax.swing.*;import javax.swing.table.*;import java.util.Vector;class TechTableData extends AbstractTableModel{    static final public ColumnData columns[] = {        new ColumnData("CODE",30,JLabel.LEFT,(new Font("DialogInput",Font.PLAIN,12))),        new ColumnData("ST",18,JLabel.CENTER,(new Font("DialogInput",Font.PLAIN,12))),        new ColumnData("LAST",100,JLabel.LEFT,(new Font("DialogInput",Font.PLAIN,12))),        new ColumnData("FIRST",100,JLabel.LEFT,(new Font("DialogInput",Font.PLAIN,12))),        new ColumnData("MI",18,JLabel.CENTER,(new Font("DialogInput",Font.PLAIN,12)))    };    private Vector tVect;    private StringUtils format = new StringUtils();    public TechTableData() { tVect = new Vector();	}        public void addRow(String cytotech_code, String active_status,         String lname, String fname, String mi) {        tVect.addElement(new TechData(cytotech_code,active_status,lname,fname,mi));    }    public void removeRow(int nRow) {        tVect.removeElementAt(nRow);    }        public void removeAllRows() {        tVect.removeAllElements();    }        public void setValueAt(Object value, int row, int column) {        TechData cRow = (TechData)tVect.elementAt(row);        switch (column) {            case 0: cRow.cytotech_code=(String)value;break;            case 1: cRow.active_status=(String)value;break;            case 2: cRow.lname=(String)value;break;            case 3: cRow.fname=(String)value;break;            case 4: cRow.mi=(String)value;break;        }        tVect.setElementAt(cRow,row);    }    public Object getValueAt(int row, int column) {         if (row<0 || row>=getRowCount()) return "";        TechData cRow = (TechData)tVect.elementAt(row);        switch (column) {            case 0: return cRow.cytotech_code;            case 1: return cRow.active_status;                    case 2: return cRow.lname;            case 3: return cRow.fname;            case 4: return cRow.mi;        }        return "";    }        public int getRowCount() { return tVect.size(); }    public int getColumnCount() { return columns.length; }    public boolean isCellEditable(int row, int column) { return (true); }    public String getColumnName(int column) { return columns[column].title; }    	//{{DECLARE_CONTROLS	//}}}
