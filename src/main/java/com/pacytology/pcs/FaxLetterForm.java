package com.pacytology.pcs;

/*
    PENNSYLVANIA CYTOLOGY SERVICES
    LABORATORY INFORMATION SYSTEM V1.0
    Copyright (C) 2001 by John Cardella
    All Rights Reserved
    
    File:       FaxLetterForm.java
    Created By: John Cardella, Software Engineer
    
    Function:   Form used to print fax letters.
    
    MODIFICATIONS ----------------------------------
    Date/Staff      Description:
*/

import java.awt.*;
import javax.swing.*;
import java.sql.*;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.Vector;
import java.io.*;
import java.util.Properties;
import java.awt.Window;
import java.awt.Toolkit;
import java.awt.PrintJob;

public class FaxLetterForm extends javax.swing.JFrame
{
    private int genericLetterCount = 0;
    private int diagnosisLetterCount = 0;
    private int nmnLetterCount = 0;
    private Vector fileNames = new Vector();
    
	public FaxLetterForm()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setTitle("Fax Letters");
		setResizable(false);
		setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
		getContentPane().setLayout(null);
		setSize(264,118);
		setVisible(false);
		diagnosisLtr.setText("Medicare (Low, High, or Diagnostic)");
		diagnosisLtr.setActionCommand("Medicare (Low, High, or Diagnostic)");
		getContentPane().add(diagnosisLtr);
		diagnosisLtr.setBounds(20,30,240,20);
		genericLtr.setText("Missing Information");
		genericLtr.setActionCommand("Missing Information");
		getContentPane().add(genericLtr);
		genericLtr.setBounds(20,10,240,20);
		nmnLtr.setText("Not Medically Necessary");
		nmnLtr.setActionCommand("Not Medically Necessary");
		getContentPane().add(nmnLtr);
		nmnLtr.setBounds(20,50,240,20);
		printButton.setText("Print Letters");
		printButton.setActionCommand("Print Letters");
		getContentPane().add(printButton);
		printButton.setBounds(20,86,136,24);
		//}}
		
		//{{INIT_MENUS
		//}}
		
		getLetterCounts();
	
		//{{REGISTER_LISTENERS
		SymAction lSymAction = new SymAction();
		printButton.addActionListener(lSymAction);
		//}}
		
		this.toFront();
		this.repaint();
	}

	public FaxLetterForm(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

	public void setVisible(boolean b)
	{
		if (b) setLocation(50,50);
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new FaxLetterForm()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets and menu bar
		Insets insets = getInsets();
		javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
		int menuBarHeight = 0;
		if (menuBar != null)
			menuBarHeight = menuBar.getPreferredSize().height;
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JCheckBox diagnosisLtr = new javax.swing.JCheckBox();
	javax.swing.JCheckBox genericLtr = new javax.swing.JCheckBox();
	javax.swing.JCheckBox nmnLtr = new javax.swing.JCheckBox();
	javax.swing.JButton printButton = new javax.swing.JButton();
	//}}

	//{{DECLARE_MENUS
	//}}
	
	private void getLetterCounts()
	{
        ResultSet rs = null;
        Statement stmt = null;
        String SQL = 
            "SELECT letter_type,COUNT(letter_type) \n"+
            "FROM pcs.fax_letters \n"+
            "WHERE in_queue = 1 \n"+
            "GROUP BY letter_type \n";
        try {
            stmt = DbConnection.process().createStatement();
            rs = stmt.executeQuery(SQL);
            String ltrType = null;
            int rcnt = 0;
            while (rs.next()) {
                ltrType=rs.getString(1);
                rcnt=rs.getInt(2);
                if (ltrType.equals("GENERIC"))
                    genericLetterCount=rcnt;
                else if (ltrType.equals("DIAGNOSIS"))
                    diagnosisLetterCount=rcnt;
                else if (ltrType.equals("NMN"))
                    nmnLetterCount=rcnt;
            }    
            rs.close(); stmt.close();
        }
        catch (Exception e) {}
    }

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == printButton)
				printButton_actionPerformed(event);
		}
	}

	void printButton_actionPerformed(java.awt.event.ActionEvent event)
	{
		if (!checkPrint()) {
		    Utils.createErrMsg("NO LETTERS SELECTED TO PRINT");
		    return;
		}
		printLetters();
	}
	
	private boolean checkPrint()
	{
	    boolean canPrint = false;
	    if (genericLtr.isSelected()) {
	        canPrint=true;
	        if (genericLetterCount>0) fileNames.addElement("generic.ltr");
	        else fileNames.addElement("generic.old");
	    }
	    if (diagnosisLtr.isSelected()) {
	        canPrint=true;
	        if (diagnosisLetterCount>0) fileNames.addElement("diag.ltr");
	        else fileNames.addElement("diag.old");
	    }
	    if (nmnLtr.isSelected()) {
	        canPrint=true;
	        if (nmnLetterCount>0) fileNames.addElement("medicare.ltr");
	        else fileNames.addElement("medicare.old");
	    }
	    return (canPrint);
	}
	
	private void printLetters()
	{
	    PrintJob pjob;
	    Properties p = new java.util.Properties();
	    String name = new String("Fax Letters");
	    if (fileNames.size()>0) {
	        for (int i=0; i<fileNames.size(); i++) {
	            String fileName = (String)fileNames.elementAt(i);
	            
	            Utils.genericPrint(Utils.SERVER_DIR, fileName , true);
	        }
	        pjob=getToolkit().getPrintJob(this,name,p);
	        if (pjob!=null) {}
	        pjob.end();
	    }
	}
	
	
	
}
