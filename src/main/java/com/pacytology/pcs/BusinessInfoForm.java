package com.pacytology.pcs;

/*
    PENNSYLVANIA CYTOLOGY SERVICES
    LABORATORY INFORMATION SYSTEM V1.0
    Copyright (C) 2001 by John Cardella
    All Rights Reserved
    
    File:       BusinessInfoForm.java
    Created By: John Cardella, Software Engineer
    
    Function:   Screen to display general business
    information; also includes table of various
    identification numbers used on reports and
    in programs.
    
    MODIFICATIONS ----------------------------------
    Date/Staff      Description:
*/

import java.awt.*;
import java.awt.event.KeyEvent;

import javax.swing.*;

import com.pacytology.pcs.ui.PcsFrame;
import com.pacytology.pcs.ui.Square;
import java.util.Vector;
import java.io.*;
import javax.swing.table.*;

public class BusinessInfoForm extends PcsFrame
{

    public Login dbLogin;
    public BusinessIDTableData bData;
    public JTable BusinessIDTable; 
    public JTableHeader header;
    public JScrollPane businessIDScrollPane;
    public BusinessInfoDbOps dbOps;
    /*
    final int IDLE = 100;
    final int QUERY = 101;
    final int ADD = 102;
    final int UPDATE = 103;
    final int DELETE = 104;
    final int UPDATE_ID = 105;
    */
    public int currMode = Lab.IDLE;
    
	public BusinessInfoForm()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setTitle("Business Information");
		setDefaultCloseOperation(javax.swing.JFrame.DISPOSE_ON_CLOSE);
		getContentPane().setLayout(null);
		setSize(672,427);
		setVisible(false);
		getContentPane().add(msgLabel);
		msgLabel.setForeground(java.awt.Color.red);
		msgLabel.setFont(new Font("Dialog", Font.BOLD, 12));
		msgLabel.setBounds(44,52,372,20);
		getContentPane().add(F3sq);
		F3sq.setBounds(35,6,20,20);
		F3lbl.setRequestFocusEnabled(false);
		F3lbl.setText("F3");
		getContentPane().add(F3lbl);
		F3lbl.setForeground(java.awt.Color.black);
		F3lbl.setFont(new Font("SansSerif", Font.PLAIN, 10));
		F3lbl.setBounds(39,6,20,20);
		getContentPane().add(F9sq);
		F9sq.setBounds(159,6,20,20);
		F9lbl.setRequestFocusEnabled(false);
		F9lbl.setText("F9");
		getContentPane().add(F9lbl);
		F9lbl.setForeground(java.awt.Color.black);
		F9lbl.setFont(new Font("SansSerif", Font.PLAIN, 10));
		F9lbl.setBounds(163,6,20,20);
		getContentPane().add(F12sq);
		F12sq.setBounds(221,6,20,20);
		F12lbl.setRequestFocusEnabled(false);
		F12lbl.setText("F12");
		getContentPane().add(F12lbl);
		F12lbl.setForeground(java.awt.Color.black);
		F12lbl.setFont(new Font("SansSerif", Font.PLAIN, 10));
		F12lbl.setBounds(222,6,20,20);
		F3action.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		F3action.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		F3action.setText("Update");
		getContentPane().add(F3action);
		F3action.setForeground(java.awt.Color.black);
		F3action.setBounds(10,30,70,18);
		F9action.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		F9action.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		F9action.setText("Exit");
		getContentPane().add(F9action);
		F9action.setForeground(java.awt.Color.black);
		F9action.setBounds(134,30,70,16);
		F12action.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		F12action.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		F12action.setText("Finalize");
		getContentPane().add(F12action);
		F12action.setForeground(java.awt.Color.black);
		F12action.setBounds(196,30,70,16);
		labNumLbl.setText("D/B/A");
		getContentPane().add(labNumLbl);
		labNumLbl.setBounds(18,86,40,14);
		businessName.setEnabled(false);
		getContentPane().add(businessName);
		businessName.setFont(new Font("DialogInput", Font.PLAIN, 12));
		businessName.setBounds(96,84,354,20);
		bAddress1.setEnabled(false);
		getContentPane().add(bAddress1);
		bAddress1.setFont(new Font("DialogInput", Font.PLAIN, 12));
		bAddress1.setBounds(96,108,354,20);
		JLabel1.setText("Address");
		getContentPane().add(JLabel1);
		JLabel1.setBounds(18,110,50,14);
		bAddress2.setEnabled(false);
		getContentPane().add(bAddress2);
		bAddress2.setFont(new Font("DialogInput", Font.PLAIN, 12));
		bAddress2.setBounds(96,132,354,20);
		bCity.setEnabled(false);
		getContentPane().add(bCity);
		bCity.setFont(new Font("DialogInput", Font.PLAIN, 12));
		bCity.setBounds(96,156,160,20);
		JLabel2.setText("City");
		getContentPane().add(JLabel2);
		JLabel2.setBounds(18,156,40,12);
		bState.setEnabled(false);
		getContentPane().add(bState);
		bState.setFont(new Font("DialogInput", Font.PLAIN, 12));
		bState.setBounds(304,156,30,20);
		JLabel3.setText("State");
		getContentPane().add(JLabel3);
		JLabel3.setBounds(264,156,40,14);
		bZip.setEnabled(false);
		getContentPane().add(bZip);
		bZip.setFont(new Font("DialogInput", Font.PLAIN, 12));
		bZip.setBounds(370,156,80,20);
		JLabel4.setText("Zip");
		getContentPane().add(JLabel4);
		JLabel4.setBounds(344,156,40,14);
		bLocalPhone.setEnabled(false);
		getContentPane().add(bLocalPhone);
		bLocalPhone.setFont(new Font("DialogInput", Font.PLAIN, 12));
		bLocalPhone.setBounds(550,84,104,20);
		JLabel5.setText("Local Phone");
		getContentPane().add(JLabel5);
		JLabel5.setBounds(472,84,80,14);
		JLabel6.setText("Toll Free");
		getContentPane().add(JLabel6);
		JLabel6.setBounds(472,110,80,14);
		bTollFreePhone.setEnabled(false);
		getContentPane().add(bTollFreePhone);
		bTollFreePhone.setFont(new Font("DialogInput", Font.PLAIN, 12));
		bTollFreePhone.setBounds(550,108,104,20);
		JLabel7.setText("Fax");
		getContentPane().add(JLabel7);
		JLabel7.setBounds(474,134,70,14);
		bFax.setEnabled(false);
		getContentPane().add(bFax);
		bFax.setFont(new Font("DialogInput", Font.PLAIN, 12));
		bFax.setBounds(550,132,104,20);
		bLabDirector.setEnabled(false);
		getContentPane().add(bLabDirector);
		bLabDirector.setFont(new Font("DialogInput", Font.PLAIN, 12));
		bLabDirector.setBounds(96,186,356,20);
		JLabel8.setText("Director");
		getContentPane().add(JLabel8);
		JLabel8.setBounds(18,188,70,14);
		busIDLbl.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
		busIDLbl.setText("BUSINESS IDENTIFICATION NUMBERS");
		getContentPane().add(busIDLbl);
		busIDLbl.setForeground(java.awt.Color.black);
		busIDLbl.setBounds(20,226,220,18);
		idCode.setEnabled(false);
		getContentPane().add(idCode);
		idCode.setFont(new Font("DialogInput", Font.PLAIN, 12));
		idCode.setBounds(550,298,104,20);
		idCode.setVisible(false);
		idCodeLbl.setText("Code");
		getContentPane().add(idCodeLbl);
		idCodeLbl.setBounds(472,300,80,14);
		idCodeLbl.setVisible(false);
		idNumLbl.setText("Number");
		getContentPane().add(idNumLbl);
		idNumLbl.setBounds(472,324,80,14);
		idNumLbl.setVisible(false);
		idDescrLbl.setText("Description");
		getContentPane().add(idDescrLbl);
		idDescrLbl.setBounds(472,350,80,14);
		idDescrLbl.setVisible(false);
		idNumber.setEnabled(false);
		getContentPane().add(idNumber);
		idNumber.setFont(new Font("DialogInput", Font.PLAIN, 12));
		idNumber.setBounds(550,322,104,20);
		idNumber.setVisible(false);
		idDescr.setEnabled(false);
		getContentPane().add(idDescr);
		idDescr.setFont(new Font("DialogInput", Font.PLAIN, 12));
		idDescr.setBounds(472,368,182,20);
		idDescr.setVisible(false);
		getContentPane().add(square1);
		square1.setBounds(97,6,20,20);
		JLabel12.setRequestFocusEnabled(false);
		JLabel12.setText("F5");
		getContentPane().add(JLabel12);
		JLabel12.setForeground(java.awt.Color.black);
		JLabel12.setFont(new Font("SansSerif", Font.PLAIN, 10));
		JLabel12.setBounds(101,6,20,20);
		JLabel13.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		JLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		JLabel13.setText("ID Nums");
		getContentPane().add(JLabel13);
		JLabel13.setForeground(java.awt.Color.black);
		JLabel13.setBounds(72,30,70,16);
		idAddButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		idAddButton.setText("ADD");
		idAddButton.setActionCommand("ADD");
		idAddButton.setEnabled(false);
		getContentPane().add(idAddButton);
		idAddButton.setFont(new Font("Dialog", Font.BOLD, 10));
		idAddButton.setBounds(472,260,84,24);
		idAddButton.setVisible(false);
		idUpdateButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
		idUpdateButton.setText("UPDATE");
		idUpdateButton.setActionCommand("UPDATE");
		idUpdateButton.setEnabled(false);
		getContentPane().add(idUpdateButton);
		idUpdateButton.setFont(new Font("Dialog", Font.BOLD, 10));
		idUpdateButton.setBounds(568,260,84,24);
		idUpdateButton.setVisible(false);
		//}}

        dbOps = new BusinessInfoDbOps(this);
        createBusinessIDTable();
        businessIDScrollPane.setEnabled(false);
        
		//{{INIT_MENUS
		//}}
	
		//{{REGISTER_LISTENERS
		SymKey aSymKey = new SymKey();
		this.addKeyListener(aSymKey);
		businessName.addKeyListener(aSymKey);
		bAddress1.addKeyListener(aSymKey);
		bAddress2.addKeyListener(aSymKey);
		bCity.addKeyListener(aSymKey);
		bState.addKeyListener(aSymKey);
		bZip.addKeyListener(aSymKey);
		bLocalPhone.addKeyListener(aSymKey);
		bTollFreePhone.addKeyListener(aSymKey);
		bFax.addKeyListener(aSymKey);
		bLabDirector.addKeyListener(aSymKey);
		SymAction lSymAction = new SymAction();
		idAddButton.addActionListener(lSymAction);
		idUpdateButton.addActionListener(lSymAction);
		idCode.addKeyListener(aSymKey);
		idNumber.addKeyListener(aSymKey);
		idDescr.addKeyListener(aSymKey);
		SymFocus aSymFocus = new SymFocus();
		//}}
		
		for (int i=0; i<this.getContentPane().getComponentCount(); i++) {
		    Component obj = this.getContentPane().getComponent(i);
		    String s = obj.getClass().getName();
		    if (s.equals("javax.swing.JTextField")
		    || s.equals("javax.swing.JTextArea"))
		        obj.addFocusListener(aSymFocus);
		}
		
	}

	public BusinessInfoForm(String sTitle)
	{
		this();
		setTitle(sTitle);
	}

    public BusinessInfoForm(Login dbLogin) 
    {
        this();
        this.dbLogin=dbLogin;
        this.dbOps.query();
        BusinessIDTable.addRowSelectionInterval(0,0);
        Utils.setColors(this.getContentPane());
        msgLabel.setForeground((Color.green).brighter());
    }

	public void setVisible(boolean b)
	{
		if (b) setLocation(0,0);
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new BusinessInfoForm()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets and menu bar
		Insets insets = getInsets();
		javax.swing.JMenuBar menuBar = getRootPane().getJMenuBar();
		int menuBarHeight = 0;
		if (menuBar != null)
			menuBarHeight = menuBar.getPreferredSize().height;
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height + menuBarHeight);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JLabel msgLabel = new javax.swing.JLabel();
	Square F3sq = new Square();
	javax.swing.JLabel F3lbl = new javax.swing.JLabel();
	Square F9sq = new Square();
	javax.swing.JLabel F9lbl = new javax.swing.JLabel();
	Square F12sq = new Square();
	javax.swing.JLabel F12lbl = new javax.swing.JLabel();
	javax.swing.JLabel F3action = new javax.swing.JLabel();
	javax.swing.JLabel F9action = new javax.swing.JLabel();
	javax.swing.JLabel F12action = new javax.swing.JLabel();
	javax.swing.JLabel labNumLbl = new javax.swing.JLabel();
	javax.swing.JTextField businessName = new javax.swing.JTextField();
	javax.swing.JTextField bAddress1 = new javax.swing.JTextField();
	javax.swing.JLabel JLabel1 = new javax.swing.JLabel();
	javax.swing.JTextField bAddress2 = new javax.swing.JTextField();
	javax.swing.JTextField bCity = new javax.swing.JTextField();
	javax.swing.JLabel JLabel2 = new javax.swing.JLabel();
	javax.swing.JTextField bState = new javax.swing.JTextField();
	javax.swing.JLabel JLabel3 = new javax.swing.JLabel();
	javax.swing.JTextField bZip = new javax.swing.JTextField();
	javax.swing.JLabel JLabel4 = new javax.swing.JLabel();
	javax.swing.JTextField bLocalPhone = new javax.swing.JTextField();
	javax.swing.JLabel JLabel5 = new javax.swing.JLabel();
	javax.swing.JLabel JLabel6 = new javax.swing.JLabel();
	javax.swing.JTextField bTollFreePhone = new javax.swing.JTextField();
	javax.swing.JLabel JLabel7 = new javax.swing.JLabel();
	javax.swing.JTextField bFax = new javax.swing.JTextField();
	javax.swing.JTextField bLabDirector = new javax.swing.JTextField();
	javax.swing.JLabel JLabel8 = new javax.swing.JLabel();
	javax.swing.JLabel busIDLbl = new javax.swing.JLabel();
	javax.swing.JTextField idCode = new javax.swing.JTextField();
	javax.swing.JLabel idCodeLbl = new javax.swing.JLabel();
	javax.swing.JLabel idNumLbl = new javax.swing.JLabel();
	javax.swing.JLabel idDescrLbl = new javax.swing.JLabel();
	javax.swing.JTextField idNumber = new javax.swing.JTextField();
	javax.swing.JTextField idDescr = new javax.swing.JTextField();
	Square square1 = new Square();
	javax.swing.JLabel JLabel12 = new javax.swing.JLabel();
	javax.swing.JLabel JLabel13 = new javax.swing.JLabel();
	javax.swing.JButton idAddButton = new javax.swing.JButton();
	javax.swing.JButton idUpdateButton = new javax.swing.JButton();
	//}}

	//{{DECLARE_MENUS
	//}}
	
	void createBusinessIDTable() {
		bData = new BusinessIDTableData();
		BusinessIDTable = new JTable();
		BusinessIDTable.setAutoCreateColumnsFromModel(false);
		BusinessIDTable.setModel(bData);

		for (int k=0;k<BusinessIDTableData.columns.length;k++) {
		    DefaultTableCellRenderer renderer = new
		        DefaultTableCellRenderer();
            renderer.setHorizontalAlignment(
                BusinessIDTableData.columns[k].alignment);
            TableColumn column = new TableColumn(k,
                BusinessIDTableData.columns[k].width,renderer,null);
            BusinessIDTable.addColumn(column);
		}
		
		header = BusinessIDTable.getTableHeader();
        header.setFont(new Font("Dialog",Font.BOLD, 12));
	
		businessIDScrollPane = new JScrollPane();
		businessIDScrollPane.getViewport().add(BusinessIDTable);
		getContentPane().add(businessIDScrollPane);
		businessIDScrollPane.setBounds(18,248,434,150);
        businessIDScrollPane.setAutoscrolls(true);

		BusinessIDTable.setFont(new Font("SansSerif", Font.PLAIN, 11));
		BusinessIDTable.setBounds(0,0,431,147);
        BusinessIDTable.setRowHeight(12);
        BusinessIDTable.setCellSelectionEnabled(false);
        
        businessIDScrollPane.setVisible(true);
        
	}
	


	class SymKey extends java.awt.event.KeyAdapter
	{
		public void keyTyped(java.awt.event.KeyEvent event)
		{
			Object object = event.getSource();
			if (object == businessName)
				businessName_keyTyped(event);
			else if (object == bAddress1)
				bAddress1_keyTyped(event);
			else if (object == bAddress2)
				bAddress2_keyTyped(event);
			else if (object == bCity)
				bCity_keyTyped(event);
			else if (object == bState)
				bState_keyTyped(event);
			else if (object == bZip)
				bZip_keyTyped(event);
			else if (object == bLocalPhone)
				bLocalPhone_keyTyped(event);
			else if (object == bTollFreePhone)
				bTollFreePhone_keyTyped(event);
			else if (object == bFax)
				bFax_keyTyped(event);
			else if (object == bLabDirector)
				bLabDirector_keyTyped(event);
			else if (object == idCode)
				idCode_keyTyped(event);
			else if (object == idNumber)
				idNumber_keyTyped(event);
			else if (object == idDescr)
				idDescr_keyTyped(event);
		}

		public void keyPressed(java.awt.event.KeyEvent event)
		{
			Object object = event.getSource();
			if (object == BusinessInfoForm.this)
				BusinessInfoForm_keyPressed(event);
		}
	}

	void BusinessInfoForm_keyPressed(java.awt.event.KeyEvent event)
	{
		int key = event.getKeyCode();
		switch (key) {
		    case KeyEvent.VK_F9:
		        this.dispose();
		        break;
            case KeyEvent.VK_F3:
                updateActions();
                break;
            case KeyEvent.VK_F12:
                finalActions();
                break;
            case KeyEvent.VK_CONTROL:
                ((JTextField)getFocusOwner()).setText(null);
                break;
            case KeyEvent.VK_ESCAPE:
                resetActions();
                break;
            case KeyEvent.VK_F5:
                idNumMaint();
                break;
            case KeyEvent.VK_DOWN:
                increment();
                break;
            case KeyEvent.VK_UP:
                decrement();
                break;
                
		}
	}
	
	void increment()
	{
	    if (bData.getRowCount()<1) return;
	    int cRow = BusinessIDTable.getSelectedRow()+1;
	    if (cRow>=bData.getRowCount()) cRow=bData.getRowCount()-1;
        BusinessIDTable.clearSelection();
        BusinessIDTable.addRowSelectionInterval(cRow,cRow);
        BusinessIDTable.scrollRectToVisible
            (BusinessIDTable.getCellRect(cRow,0,true));
        BusinessIDTable.repaint();
        BusinessIDTable.revalidate();
	}
	
	void decrement()
	{
	    if (bData.getRowCount()<1) return;
	    int cRow = BusinessIDTable.getSelectedRow()-1;
	    if (cRow<0) cRow=0;
        BusinessIDTable.clearSelection();
        BusinessIDTable.addRowSelectionInterval(cRow,cRow);
        BusinessIDTable.scrollRectToVisible
            (BusinessIDTable.getCellRect(cRow,0,true));
        BusinessIDTable.repaint();
        BusinessIDTable.revalidate();
	}
	
	@Override
	public void updateActions() { 
	    businessName.setEnabled(true);
	    bAddress1.setEnabled(true);
	    bAddress2.setEnabled(true);
	    bCity.setEnabled(true);
	    bState.setEnabled(true);
	    bZip.setEnabled(true);
	    bLabDirector.setEnabled(true);
	    bLocalPhone.setEnabled(true);
	    bTollFreePhone.setEnabled(true);
	    bFax.setEnabled(true);
	    businessName.requestFocus();
	    currMode=Lab.UPDATE;
    }
    
	@Override
	public void finalActions() { 
	    if (currMode==Lab.UPDATE) {
	        dbOps.update();
	        resetActions();
	    }
	    else if (currMode==Lab.ADD) {
	        boolean rv = dbOps.addID();
	        if (rv==true) {
	            bData.addRow(idCode.getText(),idNumber.getText(),idDescr.getText());
	        }
	        resetActions();
	        BusinessIDTable.revalidate();
	        BusinessIDTable.repaint();
	        if (rv==false) msgLabel.setText("Operation failed");
	    }
	    else if (currMode==Lab.UPDATE_ID) {
	        int row=BusinessIDTable.getSelectedRow();
	        boolean rv = dbOps.updateID();
	        if (rv==true) {
	            BusinessIDTable.setValueAt((String)idNumber.getText(),row,1);
	            BusinessIDTable.setValueAt((String)idDescr.getText(),row,2);
	        }
	        resetActions();
	        BusinessIDTable.revalidate();
	        BusinessIDTable.repaint();
	        if (rv==false) msgLabel.setText("Operation failed");
	    }
    }
	
	void idNumMaint() {
	    resetActions();
	    BusinessIDTable.setRowSelectionInterval(0,0);
	    idAddButton.setVisible(true);
	    idUpdateButton.setVisible(true);
	    idCode.setVisible(true);
	    idCodeLbl.setVisible(true);
	    idNumber.setVisible(true);
	    idNumLbl.setVisible(true);
	    idDescr.setVisible(true);
	    idDescrLbl.setVisible(true);
	    idAddButton.setEnabled(true);
	    idUpdateButton.setEnabled(true);
	    idCode.setEnabled(true);
	    idCodeLbl.setEnabled(true);
	    idNumber.setEnabled(true);
	    idNumLbl.setEnabled(true);
	    idDescr.setEnabled(true);
	    idDescrLbl.setEnabled(true);
	    idAddButton.requestFocus();
	}
	
	@Override
	public void resetActions() {
	    msgLabel.setText(null);
        businessName.setEnabled(false);
	    bAddress1.setEnabled(false);
	    bAddress2.setEnabled(false);
	    bCity.setEnabled(false);
	    bState.setEnabled(false);
	    bZip.setEnabled(false);
	    bLabDirector.setEnabled(false);
	    bLocalPhone.setEnabled(false);
	    bTollFreePhone.setEnabled(false);
	    bFax.setEnabled(false);
	    idAddButton.setVisible(false);
	    idUpdateButton.setVisible(false);
	    idCode.setVisible(false);
	    idCodeLbl.setVisible(false);
	    idNumber.setVisible(false);
	    idNumLbl.setVisible(false);
	    idDescr.setVisible(false);
	    idDescrLbl.setVisible(false);
	    idAddButton.setEnabled(false);
	    idUpdateButton.setEnabled(false);
	    idCode.setEnabled(false);
	    idCodeLbl.setEnabled(false);
	    idNumber.setEnabled(false);
	    idNumLbl.setEnabled(false);
	    idDescr.setEnabled(false);
	    idDescrLbl.setEnabled(false);
	    idCode.setText(null);
	    idNumber.setText(null);
	    idDescr.setText(null);
	    BusinessIDTable.clearSelection();
	    msgLabel.requestFocus();
	    currMode=Lab.IDLE;
	}
	
	void businessName_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.forceUpper(event);
	}

	void bAddress1_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.forceUpper(event);
	}

	void bAddress2_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.forceUpper(event);
	}

	void bCity_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.forceUpper(event);
	}

	void bState_keyTyped(java.awt.event.KeyEvent event)
	{
	    Utils.forceUpper(event,2);
	}

	void bZip_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.buildZipMask(event);
	}

	void bLocalPhone_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.buildPhoneMask(event);
	}

	void bTollFreePhone_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.buildPhoneMask(event);
	}

	void bFax_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.buildPhoneMask(event);
	}

	void bLabDirector_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.forceUpper(event);
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == idAddButton)
				idAddButton_actionPerformed(event);
			else if (object == idUpdateButton)
				idUpdateButton_actionPerformed(event);
		}
	}

	void idAddButton_actionPerformed(java.awt.event.ActionEvent event)
	{
	    msgLabel.setText(null);
	    currMode=Lab.ADD;
		idUpdateButton.setEnabled(false);
		idCode.setText(null);
		idNumber.setText(null);
		idDescr.setText(null);
		idCode.requestFocus();
	}

	void idUpdateButton_actionPerformed(java.awt.event.ActionEvent event)
	{
	    msgLabel.setText(null);
	    currMode=Lab.UPDATE_ID;
		idAddButton.setEnabled(false);
		int row = BusinessIDTable.getSelectedRow();
		if (row==(-1)) msgLabel.setText("Row in table not selected!");
		else {
		    idCode.setText((String)BusinessIDTable.getValueAt(row,0));
		    idCode.setEnabled(false);
		    idNumber.setText((String)BusinessIDTable.getValueAt(row,1));
		    idDescr.setText((String)BusinessIDTable.getValueAt(row,2));
		    idNumber.requestFocus();
		}
	}

	void idCode_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.forceUpper(event);
	}

	void idNumber_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.forceUpper(event);
	}

	void idDescr_keyTyped(java.awt.event.KeyEvent event)
	{
		Utils.forceUpper(event);
	}

	class SymFocus extends java.awt.event.FocusAdapter
	{
		public void focusGained(java.awt.event.FocusEvent event)
		{
			Object object = event.getSource();
			Utils.deselect(event);
		}
	}

	@Override
	public void queryActions() {
		// TODO Auto-generated method stub
		
	}

	@Override
	public void addActions() {
		// TODO Auto-generated method stub
		
	}



}

class BusinessIDData 
{
    public String id_code;
    public String id_number;
    public String id_description;

    public BusinessIDData(String id_code, String id_number, String id_description) {
        this.id_code=id_code;
        this.id_number=id_number;
        this.id_description=id_description;
    }
}    

class BusinessIDTableData extends AbstractTableModel
{
    static final public ColumnData columns[] = {
        new ColumnData("CODE",50,JLabel.LEFT),
        new ColumnData("ID NUMBER",100,JLabel.LEFT),
        new ColumnData("DESCRIPTION",200,JLabel.LEFT)
    };

    public Vector pVect;
    public int size;

    public BusinessIDTableData(int size) { 
        this.size=size;
        pVect = new Vector();
        initData();
    }
    
    public BusinessIDTableData() { 
        pVect = new Vector(); 
        size=0;
    }
    
    public void initData() {
        pVect.removeAllElements();
        for (int i=0;i<size;i++) 
            pVect.addElement(new BusinessIDData(" ", " ", " "));
    }
    
    public void addRow(String idCode, String idNum, String idDescr) {
        pVect.addElement(new BusinessIDData(idCode,idNum,idDescr));
        size=pVect.size();
    }
    
    
    public void reset() { 
        pVect.removeAllElements(); 
        size=0;
    }
    
    public void setValueAt(Object value, int row, int column) {
        BusinessIDData pRow = (BusinessIDData)pVect.elementAt(row);
        switch (column) {
            case 0: pRow.id_code=(String)value;break;
            case 1: pRow.id_number=(String)value;break;
            case 2: pRow.id_description=(String)value;break;
        }
        pVect.setElementAt(pRow,row);
    }

    public Object getValueAt(int row, int column) { 
        if (row<0 || row>=getRowCount()) return "";
        BusinessIDData pRow = (BusinessIDData)pVect.elementAt(row);
        switch (column) {
            case 0: return pRow.id_code;
            case 1: return pRow.id_number;
            case 2: return pRow.id_description;
        }
        return "";
    }
    
    public int getRowCount() { return size; }
    public int getColumnCount() { return columns.length; }
    public boolean isCellEditable(int row, int column) { return (true); }
    public String getColumnName(int column) { return columns[column].title; }
}
