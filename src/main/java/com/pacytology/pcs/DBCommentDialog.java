package com.pacytology.pcs;

/*
    PENNSYLVANIA CYTOLOGY SERVICES
    LABORATORY INFORMATION SYSTEM V1.0
    Copyright (C) 2001 by John Cardella
    All Rights Reserved
    
    File:       DBCommentDialog.java
    Created By: John Cardella, Software Engineer
    
    Function:   Dialog box enables used to enter an "ad hoc" 
    comment that will be placed on a DB (direct bill).
    
    MODIFICATIONS ----------------------------------
    Date/Staff      Description:
*/

import java.awt.*;
import javax.swing.*;

public class DBCommentDialog extends javax.swing.JDialog
{
    JTextArea text;
    
	public DBCommentDialog()
	{
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setTitle("Direct Bill Comment");
		setResizable(false);
		setModal(true);
		getContentPane().setLayout(null);
		setSize(313,72);
		setVisible(false);
		commentText.setLineWrap(true);
		commentText.setWrapStyleWord(true);
		getContentPane().add(commentText);
		commentText.setFont(new Font("SansSerif", Font.BOLD, 12));
		commentText.setBounds(16,16,280,40);
		//}}
	
		//{{REGISTER_LISTENERS
		SymKey aSymKey = new SymKey();
		this.addKeyListener(aSymKey);
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		commentText.addKeyListener(aSymKey);
		//}}
	}

	public DBCommentDialog(JTextArea text)
	{
		this();
		this.text=text;
		this.commentText.setText(text.getText());
		this.getContentPane().setBackground((Color.red).darker());
	}

	public void setVisible(boolean b)
	{
		if (b) setLocation(100,300);
		super.setVisible(b);
	}

	static public void main(String args[])
	{
		(new DBCommentDialog()).setVisible(true);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
		Dimension size = getSize();

		super.addNotify();

		if (frameSizeAdjusted)
			return;
		frameSizeAdjusted = true;

		// Adjust size of frame according to the insets
		Insets insets = getInsets();
		setSize(insets.left + insets.right + size.width, insets.top + insets.bottom + size.height);
	}

	// Used by addNotify
	boolean frameSizeAdjusted = false;

	//{{DECLARE_CONTROLS
	javax.swing.JTextArea commentText = new javax.swing.JTextArea();
	//}}


	class SymKey extends java.awt.event.KeyAdapter
	{
		public void keyTyped(java.awt.event.KeyEvent event)
		{
			Object object = event.getSource();
			if (object == commentText)
				commentText_keyTyped(event);
		}

		public void keyPressed(java.awt.event.KeyEvent event)
		{
			Object object = event.getSource();
			if (object == DBCommentDialog.this)
				DBCommentDialog_keyPressed(event);
			else if (object == commentText)
				commentText_keyPressed(event);
		}
	}

	void DBCommentDialog_keyPressed(java.awt.event.KeyEvent event)
	{
		// to do: code goes here.
	}

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == DBCommentDialog.this)
				DBCommentDialog_windowClosing(event);
		}

		public void windowOpened(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == DBCommentDialog.this)
				DBCommentDialog_windowOpened(event);
		}
	}

	void DBCommentDialog_windowOpened(java.awt.event.WindowEvent event)
	{
		commentText.setEnabled(true);
		commentText.requestFocus();
	}

	void commentText_keyPressed(java.awt.event.KeyEvent event)
	{
		if (event.getKeyCode()==event.VK_ENTER
	    || event.getKeyCode()==event.VK_F9)
	        closingActions();
	    else if (event.getKeyCode()==event.VK_ESCAPE)
	        commentText.setText(null);
	}
	
	void closingActions()
	{
	    text.setText(commentText.getText());
	    this.dispose();
	}

	void commentText_keyTyped(java.awt.event.KeyEvent event)
	{
		forceUpper(event,76);
	}
	
	public void forceUpper(java.awt.event.KeyEvent event, int size) {
	    if ( ((JTextArea)event.getComponent()).getText().length()>(size-1) )
	        event.consume();
	    else {
            try {
	            char key=event.getKeyChar();
	            if ( (key>='a')&&(key<='z') ) 
	                event.setKeyChar((char)(key-32));
            }
            catch (Exception e) { System.out.println(e); }            
        }
    }	    

	void DBCommentDialog_windowClosing(java.awt.event.WindowEvent event)
	{
		closingActions();
	}
}
