package com.pacytology.pcs;/*    LabReportRec.java    Software Engineer: Jon Cardella        Function: Holds data necessary to format and print    Cytopathology reports.*/import java.util.Vector;public class LabReportRec{    int patient;    String pat_lname;    String pat_fname;    String pat_mi;    String pat_ssn;    String pat_dob;    int pat_last_lab;    int doctor;    String doc_lname;    String doc_fname;    int practice;    int parent_account;    String prac_name;    String prac_address1;    String prac_address2;    String prac_city;    String prac_state;    String prac_zip;    String prac_client_notes;    String practice_type;    int report_copies;    int lab_number;    String date_collected;    String receive_date;    String date_reported;    String datestamp;    String patient_id;    String client_notes;    String lmp;    int finished;    int numDetails;    int numResults;    DetailCodeRec[] details;    Vector detailVect;    String cytotech_code;    String qc_cytotech_code;    String pathologist_code;    String remarks;    Vector remarksVect;    String qc_status;    int pap_class;    ResultCodeRec[] results;    Vector resultVect;    String superficial;    String intermediate;    String parabasal;    String path_lname;    String path_fname;    String path_mi;    String path_title;    String path_degree;    String path_status;    int preparation;    String rush;    int numSources;    int numDevices;    int numOthers;    int numConditions;    int numHistory;    int numPathology;    int sumMatNdx;    String doctor_text;    String biopsy_code;    String hold_final;    String send_fax;    String verified_on;    String verified_by;    String e_reporting;    String program;        int iDatestamp;        /* HPV data */    boolean HPVmessage = false;    String test_sent;    String test_results;    String results_received;        String director_name;        /* Variables for TissuePathology reports */    Vector tissueResults;    Vector tissuesSubmitted;    	//{{DECLARE_CONTROLS	//}}		public LabReportRec() { this.reset(); }		public void reset() 	{	    numDetails=0;	    numResults=0;	    numSources=0;	    numDevices=0;	    numOthers=0;	    numConditions=0;	    numHistory=0;	    numPathology=0;	    detailVect = new Vector();	    resultVect = new Vector();	    remarksVect = new Vector();	    tissueResults = new Vector();	    tissuesSubmitted = new Vector();	    sumMatNdx=0;	    HPVmessage=false;	}			public void formatRemarks()	{	    remarksVect=formatText(remarks);	}		public Vector formatText(String s)	{	    Vector v = new Vector();	    String nString = null;	    StringBuffer buf = new StringBuffer();	    boolean semiColonFound = false;	    for (int ndx=0; ndx<s.length(); ndx++) {	        char nextChar = s.charAt(ndx);	        if (nextChar==';') {	            semiColonFound=true;	            nString = buf.toString().trim();	            v.addElement(nString);	            buf = new StringBuffer();	        }	        else {	            semiColonFound=false;	            buf.append(nextChar);	        }	    }	    nString=buf.toString();	    if (!semiColonFound) v.addElement(nString.trim());	    return (v);	}	}
